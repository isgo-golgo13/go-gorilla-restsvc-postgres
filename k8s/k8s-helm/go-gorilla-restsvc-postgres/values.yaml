# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

namespace: 
  name: go-gorilla-restsvc-postgres

replicaCount: 1


image:
  repository: isgogolgo13/go-gorilla-restsvc-postgres
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: "1.0"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}


service:
  type: ClusterIP
  port: 80


#container ports
ports:
  - name: http
    containerPort: 8080
    protocol: TCP
    


ingress:
  enabled: true
  annotations: 
    kubernetes.io/ingress.class: traefik
    traefik.ingress.kubernetes.io/router.entrypoints: web,websecure
    traefik.ingress.kubernetes.io/router.tls: "false"

  tls: []

  paths:
    - path: /
      pathType: Prefix
      backend:
        service: 
          name: go-gorilla-restsvc-postgres
          port:
            number: 80



## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#container-probes
livenessProbe:
  initialDelaySeconds: 10
  periodSeconds: 5
  httpGet:
    scheme: HTTP
    path: /health-check
    port: 8080

readinessProbe:
  initialDelaySeconds: 5
  periodSeconds: 3
  httpGet:
    scheme: HTTP
    path: /health-check
    port: 8080



resources:
  requests:
    cpu: 100m
    memory: 128Mi
  limits:
    cpu: 200m
    memory: 256Mi


# VPA values
vpaAutoscaling:
  enabled: false
  updatePolicy:
    updateMode: "Off"

# HPA values
hpaAutoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 5
  targetCPUUtilizationPercentage: 70
  targetMemoryUtilizationPercentage: 70

budget:
  enabled: false
  minAvailable: "25%"

nodeSelector: {}

tolerations: []

affinity: {}



deploymentConfig:
  enabled: true 
  connectionConfig:
    dataStoreConnectionConfig: |
      EngineStorageHostServer=go-gorilla-restsvc-postgres-postgresql
      EngineStorageHostServerPort=5432
      EngineStorageServerUser=isgogolgo13
      EngineStorageServerUserPassword=isgogolgo13
      EngineStorageServerDB=EngineDB 


############################################
###########  Postgres  Subchart  ###########
############################################
postgresql:
  postgresqlDatabase: "EngineDB"   #postgres ok on k8s, EngineDB verify
  postgresqlUsername: "isgogolgo13"
  postgresqlPassword: "isgogolgo13"

  volumePermissions:
    enabled: true
  
  initdbScripts:
    db-up.sql: |
      CREATE DATABASE EngineDB;

      CREATE TABLE IF NOT EXISTS Engines (
      id SERIAL PRIMARY KEY,
      serial_id VARCHAR(256) NOT NULL,
      engine_config VARCHAR(256) NOT NULL,
      engine_capacity NUMERIC(6, 2),
      engine_rpm_redline SMALLINT NOT NULL);

      INSERT INTO Engines (serial_id, engine_config, engine_capacity, engine_rpm_redline) 
      VALUES ('VW_100000001', 'V8', 6250.50, 12500);
      INSERT INTO Engines (serial_id, engine_config, engine_capacity, engine_rpm_redline) 
      VALUES ('Audi_100000002', 'V8', 6260.75, 13550);
      INSERT INTO Engines (serial_id, engine_config, engine_capacity, engine_rpm_redline) 
      VALUES ('Porsche_100000003', 'V8', 6270.50, 16250);
      INSERT INTO Engines (serial_id, engine_config, engine_capacity, engine_rpm_redline) 
      VALUES ('Porsche_100000004', 'V8', 6260.50, 15750);
      INSERT INTO Engines (serial_id, engine_config, engine_capacity, engine_rpm_redline) 
      VALUES ('Mercedes_AMG_100000005', 'V8-Twin-Turbo', 6265.50, 16550);
      INSERT INTO Engines (serial_id, engine_config, engine_capacity, engine_rpm_redline) 
      VALUES ('Mercedes_AMG_100000006', 'V8-Twin-Turbo', 6275.50, 16750);
      INSERT INTO Engines (serial_id, engine_config, engine_capacity, engine_rpm_redline) 
      VALUES ('Mercedes_AMG_100000007', 'V12-Twin-Turbo', 6295.50, 16750);
      INSERT INTO Engines (serial_id, engine_config, engine_capacity, engine_rpm_redline) 
      VALUES ('Mercedes_AMG_100000008', 'V12-Twin-Turbo', 6695.50, 18950);


  
